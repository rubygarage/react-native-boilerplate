// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Popover styled components S.Popover matches snapshot default 1`] = `
<Modal
  hardwareAccelerated={true}
  onDismiss={[Function]}
  onRequestClose={[Function]}
  onShow={[Function]}
  supportedOrientations={
    Array [
      "portrait",
      "portrait-upside-down",
      "landscape",
    ]
  }
  transparent={true}
  visible={false}
>
  <View
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": -2668,
        },
        Object {
          "left": 0,
        },
      ]
    }
  >
    <View
      onLayout={[Function]}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 20,
          "position": "absolute",
          "right": 0,
          "top": 2668,
        }
      }
    >
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      />
    </View>
    <View
      pointerEvents="box-none"
      style={
        Object {
          "backgroundColor": "transparent",
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": -2668,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "transparent",
            "bottom": 2668,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      />
      <View
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "top": 0,
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "white",
              "borderBottomColor": "#333438",
              "borderRadius": 4,
              "elevation": 2,
              "overflow": "visible",
              "position": "absolute",
              "shadowColor": undefined,
              "shadowOffset": Object {
                "height": 3,
                "width": 0,
              },
              "shadowOpacity": 0.27,
              "shadowRadius": 4.65,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
                Object {
                  "scale": 0,
                },
                Object {
                  "perspective": 1000,
                },
              ],
            }
          }
        >
          <View />
        </View>
        <View
          style={
            Object {
              "height": 18,
              "left": 0,
              "position": "absolute",
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
                Object {
                  "scale": 0,
                },
              ],
              "width": 18,
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "transparent",
                "borderBottomWidth": 9,
                "borderLeftColor": "transparent",
                "borderLeftWidth": 9,
                "borderRightColor": "transparent",
                "borderRightWidth": 9,
                "borderTopColor": "transparent",
                "borderTopWidth": 9,
                "height": 18,
                "position": "absolute",
                "width": 18,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
